{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","Notification","message","style","color","fontsize","backgroundColor","Filter","newFilter","filterfunction","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","deletePerson","filter","person","name","includes","map","filteredPerson","number","onClick","id","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","Message","setMessage","useEffect","personsService","initialPeople","event","target","preventDefault","personObject","some","p","window","alert","returnedPerson","concat","setTimeout","url","find","confirm","indexOf","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cc11a7c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request= axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request=axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create}\n\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personsService from './services/persons'\nimport reactDom from 'react-dom'\n\nconst Notification = ({message}) => {\n  const notificationStyle ={\n    color:'green',\n    fontsize:16,\n    backgroundColor:'orange'\n  }\n  return (\n  <div style={notificationStyle}>\n    <h1>\n      {message}\n    </h1>\n\n  </div>\n  )\n}\nconst Filter = ({newFilter, filterfunction}) => {\n  return (\n    <div>\n    Filter shown with:\n    <input value={newFilter} onChange ={filterfunction}/>\n  </div>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div>\n      name:\n      <input value={newName} onChange ={handleNameChange}/>\n    </div>\n    <div>\n      number:\n      <input value={newNumber} onChange ={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n\n  )\n}\n\nconst Persons = ({newFilter, persons,deletePerson}) => {\n  return (\n    <ul>\n    {persons.filter(person => person.name.includes(newFilter)).map(filteredPerson => (\n      <li key={filteredPerson.name}>\n      {filteredPerson.name} {filteredPerson.number} <button onClick={()=> deletePerson(filteredPerson.id)}>DELETE</button>\n      </li>\n      ))}\n    </ul>\n  )\n}\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] =  useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [Message, setMessage] = useState('')\n\n\n  useEffect(()=> {\n    personsService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  },[])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filterList = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.name+1\n    }\n    if (persons.some(p => p.name === newName)) {\n      window.alert(`${newName} is already added to phonebook`);\n      setNewName('')\n    }\n    else{\n      personsService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(personObject))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Sucessfully added ${personObject.name}`)\n          setTimeout(()=> {setMessage(null)},2000)\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const url = `http://localhost:3001/api/persons/${id}`\n    const name=persons.find(person=>person.id===id)\n    if (window.confirm(`Do you really want to delete ${name.name}?`)) {\n      const index = persons.indexOf(name);\n      setPersons(persons.filter(person=>person.id!==id))\n      axios.delete(url)\n    }\n  }\n\n\n  return (\n    <div>\n      <Notification message={Message} />\n      <h2>Phonebook</h2>\n      <Filter newFilter={newFilter} filterfunction = {filterList} />\n\n      <h3>Add a new person</h3>\n\n      <PersonForm \n      addPerson={addPerson} newName={newName} handleNameChange= {handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n      <Persons newFilter={newFilter} persons={persons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}